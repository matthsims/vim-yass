*yass.txt* Scroll prettier.

Author: Matt Simmons
License: MIT license

===============================================================================
Function                                                                 *yass*

yass#speed({distance}, {with_cursor=0}, {override=0})                 *yass#scroll*
  {distance} is the distance to scroll. By default, it will add to the current
	distance to travel.
	{with_cursor} is whether or not to move the cursor with the scroll.
	{override} is whether or not to zero out all values before beginning the
	scroll.

===============================================================================
Default mappings                                                *yass-mappings*

  nnoremap <Plug>YassDown :call yass#scroll(&scroll, 1)<CR>
  nnoremap <Plug>YassUp :call yass#scroll(-&scroll, 1)<CR>
  
  nnoremap <silent> <Plug>Yass_zCR   ^:<C-u>call yass#scroll(line(".") - line("w0") + &scrolloff)<CR>
  nnoremap <silent> <Plug>Yass_zt     :<C-u>call yass#scroll(line(".") - line("w0") + &scrolloff)<CR>
  nnoremap <silent> <Plug>Yass_zdot  ^:<C-u>call yass#scroll(line(".") - (line("w$") + line("w0")) / 2)<CR>
  nnoremap <silent> <Plug>Yass_zz     :<C-u>call yass#scroll(line(".") - (line("w$") + line("w0")) / 2)<CR>
  nnoremap <silent> <Plug>Yass_zdash ^:<C-u>call yass#scroll(&scrolloff + line(".") - line("w$"))<CR>
  nnoremap <silent> <Plug>Yass_zb     :<C-u>call yass#scroll(&scrolloff + line(".") - line("w$"))<CR>
  
  if !hasmapto('<Plug>YassDown') && maparg('<C-d>', 'n') ==# '' && !exists('g:yass_noc')
  	nmap <C-d> <Plug>YassDown
  	nmap <C-u> <Plug>YassUp
  
  	nmap <C-d> <Plug>YassDown
  	nmap <C-u> <Plug>YassUp
  endif
  
  if !hasmapto('<Plug>Yass_zz') && maparg('zz', 'n') ==# '' && !exists('g:yass_noz')
  	nmap z<CR> <Plug>Yass_zCR
  	nmap zt    <Plug>Yass_zt
  	nmap z.    <Plug>Yass_zdot
  	nmap zz    <Plug>Yass_zz
  	nmap z-    <Plug>Yass_zdash
  	nmap zb    <Plug>Yass_zb
  endif

===============================================================================
Speed calculation                                                  *yass-speed*

*g:Yass_speed*
Must be a |Funcref|. By default,
  let g:Yass_speed = {y, speed -> 55 + 2*y + 50*tanh((y-10)/5)}
It should return a positive value interpreted as lines/second.

*g:yass_interval*
The number of miliseconds to wait before checkign to see if a scroll tick
should be done. If this is set to a high value, the plugin will scroll
multiple ticks at once to accomodate.

